using Content.Client.Computer;
using Content.Client.UserInterface.Controls;
using Content.Shared.Shuttles.BUIStates;
using Content.Shared.Shuttles.Components;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Content.Client._NF.SpaceArtillery.BUI;
using Content.Shared._NF.SpaceArtillery.BUI;
using Content.Shared.SpaceArtillery;

namespace Content.Client._NF.SpaceArtillery.UI;

[GenerateTypedNameReferences]
public sealed partial class CopilotConsoleWindow : FancyWindow,
    IComputerWindow<CopilotConsoleBoundUserInterfaceState>
{
    private readonly ButtonGroup _showCopilotButtonGroup = new();
    private readonly ButtonGroup _showVesselButtonGroup = new();
    public event Action<bool>? ShowCopilot;
    public event Action<bool>? ShowVessel;

    public CopilotConsoleWindow()
    {
        RobustXamlLoader.Load(this);
        KeypadContainer.Text = "Control Terminal";
        /*ShowCopilotOffButton.Group = _showCopilotButtonGroup;
        ShowCopilotOnButton.Group = _showCopilotButtonGroup;
        ShowCopilotOnButton.OnPressed += args => ShowCopilotPressed(true);
        ShowCopilotOffButton.OnPressed += args => ShowCopilotPressed(false);

        ShowVesselOffButton.Group = _showVesselButtonGroup;
        ShowVesselOnButton.Group = _showVesselButtonGroup;
        ShowVesselOnButton.OnPressed += args => ShowVesselPressed(true);
        ShowVesselOffButton.OnPressed += args => ShowVesselPressed(false);*/
    }

    private void ShowCopilotPressed(bool pressed)
    {
        //ShowCopilot?.Invoke(pressed);
    }

    private void ShowVesselPressed(bool pressed)
    {
        //ShowVessel?.Invoke(pressed);
    }

    public void UpdateState(CopilotConsoleBoundUserInterfaceState state)
    {
        /*if ((state.AllowedFlags & CopilotFlags.HideLabel) != 0x0)
        {
            ShowCopilotOffButton.Disabled = false;
            ShowCopilotOnButton.Disabled = false;

            if ((state.Flags & CopilotFlags.HideLabel) != 0x0)
            {
                ShowCopilotOffButton.Pressed = true;
            }
            else
            {
                ShowCopilotOnButton.Pressed = true;
            }
        }
        else
        {
            ShowCopilotOffButton.Disabled = true;
            ShowCopilotOnButton.Disabled = true;
        }

        if ((state.AllowedFlags & CopilotFlags.Hide) != 0x0)
        {
            ShowVesselOffButton.Disabled = false;
            ShowVesselOnButton.Disabled = false;

            if ((state.Flags & CopilotFlags.Hide) != 0x0)
            {
                ShowVesselOffButton.Pressed = true;
            }
            else
            {
                ShowVesselOnButton.Pressed = true;
            }
        }
        else
        {
            ShowVesselOffButton.Disabled = true;
            ShowVesselOnButton.Disabled = true;
        }*/
    }
}
